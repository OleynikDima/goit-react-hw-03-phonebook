{"version":3,"sources":["components/Section/index.js","components/Form/index.js","components/Contacts/index.js","components/Contacts/ContactFilter.js","components/App.js","components/LocalSt/index.js","index.js","components/Contacts/Contact.module.css","components/Form/Form.module.css"],"names":["Section","title","children","PropsTypes","string","isRequired","node","Form","state","text","number","handleChangeText","e","setState","target","value","handleChangeNumber","handleSubmit","preventDefault","props","onAddText","className","style","form","onSubmit","this","input","type","onChange","placeholder","input_number","country","button","disabled","Component","Contacts","contacts","onDelete","list","length","map","contact","item","key","id","name","onClick","func","ContactEditor","onChangeFilter","shortid","require","App","filter","changeFilter","event","updateInfo","contack","toLowerCase","includes","handleCreateObjectContact","alert","newObj","prevState","onRemoveItem","itemId","indexOf","prevContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visible","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d25da414.chunk.js","sourcesContent":["import React from 'react'\nimport PropsTypes from 'prop-types'\n\nexport default function Section({title, children}){\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n    )\n}\n\n\nSection.PropsTypes={\n    title:PropsTypes.string.isRequired,\n    children:PropsTypes.node.isRequired\n}","import React, {Component}from 'react';\nimport style from './Form.module.css'\n\n\nexport default class Form extends Component {\n    state={\n        text:'',\n        number:''\n    }\n//меняем текст в state\n    handleChangeText = e => {\n        this.setState({\n            text: e.target.value,\n        })\n    }\n//меняем number in state \n    handleChangeNumber = e => {\n        this.setState({\n            number: e.target.value,\n        })\n    }\n\n// отправляем в App our state\n    handleSubmit = e =>{\n       e.preventDefault();\n       const {text,number} = this.state\n\n        this.props.onAddText({text,number})\n    //обнуляем наш input\n        this.setState({\n            text:'',\n            number:'',\n        })\n    }\nrender(){\nreturn (\n    <form \n    className={style.form}\n    onSubmit={this.handleSubmit}\n        >\n        <label>Name\n            <input \n            className={style.input}\n            type=\"input\" \n            value={this.state.text}\n            onChange={this.handleChangeText}\n            placeholder=\"please write name\"\n            />\n         </label>\n\n         <label> Number\n            <input \n            className={style.input_number}\n            type=\"input\" \n            country=\"US\"\n            value={this.state.number}\n            onChange={this.handleChangeNumber}\n            placeholder=\"number phone\"\n            />\n         </label>\n\n\n         <button \n            className={style.button} \n            type=\"submit\"\n            disabled={!this.state.text}\n            >\n                Add contact \n         </button>\n    </form>   \n  )\n }\n}\n\n","import React from 'react';\nimport PropsTypes from 'prop-types';\nimport style from './Contact.module.css'\n\n\n// фун-я создает list item \nconst Contacts = ({contacts, onDelete}) => {\n    return (\n    <div>\n        <ul className={style.list}>\n            { contacts.length > 0 \n                ? contacts.map((contact) => \n                        <li \n                        className={style.item}\n                        key={contact.id}>\n                            {contact.name}: {contact.number} \n                            <button  \n                            className={style.button}\n                            onClick={()=> onDelete(contact.id)}\n                            >\n                            Delete\n                            </button>\n                        </li>)\n                : ''\n            }\n        </ul>\n    </div>\n    )\n}\n\nContacts.PropsTypes = {\n    contacts:PropsTypes.node={\n        id:PropsTypes.string,\n        name:PropsTypes.string.isRequired,\n        number:PropsTypes.string.isRequired\n    },\n    onDelete:PropsTypes.func.isRequired,\n}\n\nexport default Contacts;","import React from 'react'\nimport style from './Contact.module.css'\n\n\n//Filter input for Contacts \nexport default function ContactEditor ({value,onChangeFilter}){\n\n    return (\n        <div>\n            <input \n                className={style.input}\n                type=\"text\"\n                value={value}\n                onChange={onChangeFilter}\n            />\n        </div>\n    )\n}","import React, {Component} from 'react'\n// import PropsTypes from 'prop-types'\nimport Section from './Section'\nimport Form from './Form'\nimport ContactsList from './Contacts'\nimport ContactFilter from './Contacts/ContactFilter'\nimport LocalStorage from './LocalSt'\n\n\nconst shortid = require('shortid');\n\n\nexport default class App extends Component {\n\n    state = { \n        contacts: [\n                {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n                {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n                {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n                {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n                  ],\n        filter:''\n        \n    };\n// функция записывает input contacts in filter\n    changeFilter = event => {\n        this.setState({filter:event.target.value})\n    }\n// search similar name\n    updateInfo = () =>{      \n        const {filter, contacts} = this.state\n         return contacts.filter(contack => contack.name.toLowerCase().includes(filter.toLowerCase()))  \n    }\n//ф-я перезаписывает контакты \n    handleCreateObjectContact = ({text,number}) =>{\n\n        const {contacts} =this.state\n        const filterName = contacts.map(contact => contact.name)\n    // смотрим есть ли похожие contacts\n        if (filterName.includes(text)){\n            alert(text + ' is already in Contacts')\n        }else {\n\n    //создаем обьект           \n            const newObj ={\n                id:shortid(),\n                name:text,\n                number:number,\n               }\n    // перезаписываем stae.contacts  пополняем массив\n            this.setState((prevState)=>{\n                return {\n                    contacts:[...prevState.contacts,newObj],\n                }\n            })\n\n        }\n    }\n// Delete contact\n    onRemoveItem = itemId =>{\n        this.setState((prevState)=>{\n            return {\n                contacts: prevState.contacts.filter(contact => contact.id.indexOf(itemId) === -1)\n            }\n        })        \n    }\n\n// life-circle get local sterage\ncomponentDidMount(){\nconst prevContacts = localStorage.getItem('contacts')\nif (prevContacts){\n    this.setState({contacts:JSON.parse(prevContacts)})\n}\n}\n//add local storage \ncomponentDidUpdate(prevState,prevProps){\n    if(prevState.contacts !== this.state.contacts){\n        localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n}\n\n    render (){\n        const {filter} = this.state;\n        const visible = this.updateInfo();\n        return (\n            <>\n            <Section title =\"Phonebook\">\n                <Form \n                    onAddText={this.handleCreateObjectContact}/>\n            </Section>\n\n            <Section title =\"Contacts\">\n\n                <ContactFilter \n                    onChangeFilter={this.changeFilter}\n                    value={filter}/>\n                   \n                <ContactsList \n                    contacts ={visible}  \n                    onDelete={this.onRemoveItem}\n                    />\n            </Section>\n            </>\n\n        )\n    }\n}","import React,{Component} from 'react'\n\n\nexport default class LocalStorage extends Component{\n    state = { \n        contacts:this.props,\n        addContactInLocal:this.addContactInLocal.bind(this),\n        updateLocal:this.UpdateLocal.bind(this)\n    }\n\n    addContactInLocal(){\n        localStorage.setItem('contacts',JSON.stringify(this.state.contacts)) \n    }\n    UpdateLocal(){\n       localStorage.getItem('contacts')\n        // this.setState({contacts:JSON.parse(prevContacts)})\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__3P6HO\",\"button\":\"Contact_button__3-gGv\",\"input\":\"Contact_input__3K9mt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"input\":\"Form_input__2ESfd\",\"input_number\":\"Form_input_number__2ZXKo\",\"button\":\"Form_button__243jh\"};"],"sourceRoot":""}